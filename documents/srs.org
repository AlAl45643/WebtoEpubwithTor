Software Requirement Specification
* Changelog
| Version Release | Major Changes                                                                                | Date         |
|-----------------+----------------------------------------------------------------------------------------------+--------------|
|             1.0 | Initial release of the document                                                              | Mar 21, 2025 |
|             1.1 | Images now export to relative file paths                                                     | Apr 30, 2025 |
|             1.2 | Changed names for functional requirements in System Features; Added CreatingRequests.Reverse | May 5, 2025  |
|             1.3 | Removed .Confirm from RetrievingRequests.ExportToEpub                                        | May 12, 2025 |
|             1.4 | Sentence revisions; Added CreatingRequests.RemoveFrom; Removed Data Requirements section;    | May 27, 2025 |

* Introduction
** Purpose
This SRS describes the functional and nonfunctional requirements for the WebtoEpubwithTor (WET) software.

** Product Scope
The WET will export user selected web pages linked within a main webpage into an electronic publication.

* Product Overview
** Product Perspective
The WET is a replacement for downloading and converting web pages manually. The context diagram in Figure A-1 illustrates the external entities and system interfaces for release 1.0.

#+BEGIN_SRC plantuml :file ./A-1.png
  @startuml
  skinparam AgentBorderThickness 2
  skinparam shadowing true
  skinparam defaultTextAlignment center
  skinparam AgentStereotypeFontSize 14
  skinparam footerFontSize 15
  skinparam footerFontColor Black
  component "**WET**" as WET
  usecase "Webpage Hoster" as Host
  actor "User" as user


  user <-do-> WET : "Use System"
  WET <-ri-> Host : "Retrieve Webpage(s)"

  center footer "**Context Diagram**"
  @enduml
#+End_SRC
[[file:./A-1.png]]

| User Class     | Description                                                       |
|----------------+-------------------------------------------------------------------|
| User           | A user that wants to create an EPUB of selected webpages.         |
| WET            | Our system that retrieves and assembles webpages into an EPUB.    |
| Webpage Hoster | A hoster that holds the webpages that the user wants to retrieve. |


#+END_SRC
** Product Functions
PF-1: The product shall use standard tor relays to retrieve online content.

PF-2: The product shall collect specific hyperlinks within a website using a matching pattern given by the user.

PF-3: The product shall save the specified webpages' content.

PF-4: The product shall assemble the saved webpages into a single continuous EPUB file in an order specified by the user.

PF-5: The product shall export the completed EPUB file to the user's preferred folder.

** User Characteristics

| User Classes | Description                                                                                                                                                                                                                |
|--------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| User         | The User provides the website to be scanned for hyperlinks, the matching pattern to scan with, and the order the webpages shall be assembled in. The User will then recieve the completed epub in his specified directory. |

** Operating Environment
OE-1: The WET shall operate correctly with the following web browsing suite: Tor Browser (latest version).

OE-2: The WET shall operate correctly with Fedora Workstation Edition OS (latest version). 

OE-3: The WET shall operate correctly with Windows 10 OS (latest version).

** Assumptions and Dependencies
AS-1: The requested website and referenced webpages are accessible.

AS-2: The requested website references the needed webpages.

* System Features
** Create a List

*** Description
The User can create a list of pages by scanning a webpage with a pattern. Priority = High

*** Functional Requirements
| CreatingRequests.New: | Creating a List                                    |
|-------------------------+----------------------------------------------------|
| .RequestName:           | The WET shall prompt the User for a request name. |
| .Link:                  | The WET shall prompt the User for a valid link.    |
| .Pattern:               | The WET shall prompt the User for a valid pattern. |

** View, Modify, and Delete Links in List

*** Description
A User can create, view, add, remove, switch, and reverse the links in a list. Priority = Medium

*** Functional Requirements

| CreatingRequests.Print: | Viewing the list of pages from .Start to .Stop    |
|-------------------------+---------------------------------------------------|
| .RequestName:           | The WET shall prompt the User for a request name. |


| CreatingRequests.Print: | Viewing the list of pages from .Begin to .End                                  |
|-------------------------+--------------------------------------------------------------------------------|
| .RequestName:           | The WET shall prompt the User for a request name.                              |
| .Begin:                 | The User shall specify a starting index of the range of links to be displayed. |
| .End:                   | The User shall specify a stopping index of the range of links to be displayed. |


| CreatingRequests.Add: | Adding .Link at .Index                                                       |
|-----------------------+------------------------------------------------------------------------------|
| .RequestName:         | The WET shall prompt the User for a request name.                            |
| .Link:                | The WET shall prompt the User for a valid link.                              |
| .Index:               | The WET shall prompt the User for a valid index for the link to be added to. |


| CreatingRequests.RemoveAt: | Removing a link at .Index                                      |
|----------------------------+----------------------------------------------------------------|
| .RequestName:              | The WET shall prompt the User for a request name.              |
| .Index:                    | The WET shall take a valid index to remove a link in the list. |


| CreatingRequests.Reverse | Reverse the list of pages.                        |
|--------------------------+---------------------------------------------------|
| .RequestName:            | The WET shall prompt the User for a request name. |


| CreatingRequests.RemoveFrom | Removing links from .Start to                                                          |
|-----------------------------+----------------------------------------------------------------------------------------|
| .RequestName:               | The WET shall prompt the User for a request name.                                      |
| .Begin:                     | The User shall specify an inclusive starting index for a range of links to be removed. |
| .End:                       | The User shall specify an exclusive stopping index for a range of links to be removed. |

** Export to Epub

*** Description
A User can save the content of webpages in a list, export the content into one continuous epub, and save it in their preferred folder. Priority = High

*** Functional Requirements
| CreatingRequests.ExportRequest: | Exporting the list into an Epub                                     |
|---------------------------------+---------------------------------------------------------------------|
| .RequestName:                   | The WET shall prompt the User for a request name.                   |
| .Location                       | The User shall specify the location for the Epub to be exported to. |

* External Interface Requirements
** User Interfaces
UI-1: The system shall be acessed through a command line interface.

UI-2: The system shall provide a help command to explain how to use the system.

* Quality Attributes
** Functionality Requirements
USE-1: The WET shall be able to access atleast 75 of the top 100 novels at [[https://www.novelupdates.com/series-ranking/][a site for cataloging community translations for eastern web novels.]]

** Anonymity Requirements
SEC-1: All internet acesses shall be routed through tor circuits.

SEC-2: The system shall request a new tor circuit for each set of webpages to be scanned.
